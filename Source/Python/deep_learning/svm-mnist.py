from urllib import urlretrieve
import cPickle as pickle
import os
import gzip

import numpy as np
from sklearn import svm
from sklearn import cross_validation

def load_dataset():
    url = 'http://deeplearning.net/data/mnist/mnist.pkl.gz'
    filename = 'mnist.pkl.gz'
    if not os.path.exists(filename):
        print("Downloading MNIST dataset...")
        urlretrieve(url, filename)

    with gzip.open(filename, 'rb') as f:
        data = pickle.load(f)

    X_train, y_train = data[0]
    X_val, y_val = data[1]
    X_test, y_test = data[2]

    # X_train = X_train.reshape((-1, 1, 28, 28))
    X_val = X_val.reshape((-1, 1, 28, 28))
    X_test = X_test.reshape((-1, 1, 28, 28))

    y_train = y_train.astype(np.uint8)
    y_val = y_val.astype(np.uint8)
    y_test = y_test.astype(np.uint8)

    return X_train, y_train, X_val, y_val, X_test, y_test

def extractFeatures(sample, features, n):
    extrated_sample = np.empty([len(sample), n])
    for i in range(len(sample)):
        extrated_sample[i] = np.delete(sample[i], features)

    return extrated_sample

def main():
	X_train, y_train, X_val, y_val, X_test, y_test = load_dataset()

	print X_train.shape, y_train.shape

	print len(X_train[0])
	features = [659,237,129,655,358,443,328,300,181,262,600,326,550,511,526,272,519,353,413,180,271,125,427,359,186,483,455,151,546,301,595,440,270,467,330,235,624,329,298,159,495,385,273,356,268,471,357,629,573,344,244,179,494,714,606,660,399,325,654,289,686,581,412,187,554,302,269,384,245,331,130,238,243,100,713,607,715,295,124,685,297,99,687,630,242,150,274,522,321,388,632,178,499,416,216,240,101,188,213,631,241,293,538,716,208,211,608,684,212,303,234,98,605,246,360,217,688,215,239,566,322,661,574,371,582,209,267,712,653,633,214,316,444,207,577,210,527,266,261,218,510,123,623,520,160,102,482,97,521,634,206,717,601,189,131,689,594,555,177,454,275,332,742,190,547,711,219,549,662,247,233,149,205,472,683,191,741,743,583,635,288,609,220,426,343,690,652,103,248,304,602,260,161,500,740,192,96,604,398,575,276,122,232,718,294,576,221,204,556,528,682,176,72,622,710,162,744,603,132,610,71,548,259,73,663,70,163,584,249,739,636,193,104,231,315,565,417,370,389,537,287,148,95,691,611,203,593,121,69,651,74,745,361,445,164,681,258,230,277,719,509,637,738,709,529,557,473,175,664,133,305,75,333,585,501,222,105,612,342,250,286,746,202,481,68,621,94,638,257,314,165,639,278,147,229,692,120,453,720,285,680,650,76,737,708,174,564,194,613,134,536,592,425,640,747,201,67,313,135,397,558,256,665,284,693,106,93,530,77,649,508,736,721,146,341,586,369,136,306,251,173,228,707,666,502,667,620,679,641,748,119,279,223,166,107,66,92,772,771,312,668,480,735,474,694,78,145,614,770,137,200,722,446,678,283,749,648,255,773,418,42,340,195,108,227,311,334,362,41,669,307,563,774,390,40,706,591,65,91,769,768,43,452,750,695,44,535,723,172,677,775,642,79,619,396,167,339,118,39,507,751,254,503,559,531,199,696,335,734,587,766,767,64,45,109,776,479,282,226,80,47,11,13,16,8,12,14,9,15,10,116,81,7,90,88,6,5,4,3,2,89,87,114,18,115,86,117,82,83,84,85,17,111,19,51,50,30,52,53,54,55,56,49,48,46,36,38,37,35,32,34,33,31,29,20,62,61,28,63,110,112,113,21,60,59,58,25,27,26,24,57,23,22,784,392,138,676,697,675,699,674,698,700,139,704,705,703,701,702,673,672,671,615,616,590,670,589,617,618,643,644,647,646,645,724,725,726,763,764,762,759,761,765,777,778,779,782,781,780,760,758,727,730,731,729,757,728,732,733,752,753,756,755,754,588,562,561,281,308,280,225,253,309,310,336,337,364,363,338,252,224,366,142,143,141,198,140,144,168,169,170,197,196,171,365,367,560,476,477,475,449,451,478,504,505,506,534,533,532,450,448,368,393,394,783,447,391,395,419,420,421,424,423,422,1]
	X_train = extractFeatures(X_train, features, len(X_train[0])-len(features)+1)
	print len(X_train[0])

	clf = svm.SVC(kernel='linear', C=1)
	scores = cross_validation.cross_val_score(clf, X_train, y_train, cv=5)

	print scores

main()